% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mergeByRef.R
\name{mergeByRef}
\alias{mergeByRef}
\title{Merge two tables by reference}
\usage{
mergeByRef(x, y, by = intersect(names(x), names(y)),
  colsToAdd = setdiff(names(y), by))
}
\arguments{
\item{x}{data.table or object inheriting from data.table.}

\item{y}{data.table or object inheriting from data.table.}

\item{by}{Name of columns used for merging. By default, the function uses
all common columns.}

\item{colsToAdd}{Name of columns of \code{y} to add to \code{x}. By default
the function adds all columns of \code{y} that are not in \code{x}.}
}
\value{
\code{mergeByRef()} modifies its first input by reference so it is used for its
side effects. Nevertheless for convenience it invisibly returns \code{x} with
the new columns appended
}
\description{
This function can be used when one wants to get exactly the same table but
with some new columns got from a another table. Technically this is equivalent
to a left join without row duplication. Unlike with the default
\link[base:merge]{merge}
function, \code{mergeByRef()} does not copy data; it modifies it by reference.
This results in a great performance improvement.
}
\examples{

require(data.table)

x <- data.table(a = 1:5, b = rnorm(5))
y <- data.table(a = 1:5, c = rnorm(5))

# Add the "c" column from y to x
mergeByRef(x, y)
names(x)

}
